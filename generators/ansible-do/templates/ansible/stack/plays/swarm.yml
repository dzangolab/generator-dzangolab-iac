---
- name: Setup Docker Swarm Leader
  hosts: swarm_leader
  tasks:
    - name: Install Python Docker module
      ansible.builtin.pip:
        name: docker

    - name: Fetch IP of the droplet
      ansible.builtin.uri:
        url: http://169.254.169.254/metadata/v1/interfaces/private/0/ipv4/address
        return_content: yes
      register: metadata_response

    - name: Set IP as a fact
      ansible.builtin.set_fact:
        private_ip: "{{ metadata_response.content | trim }}"

    - name: Allow Swarm port 2377 through firewall
      ansible.builtin.command: ufw allow 2377/tcp
      become: yes

    - name: Initialize Docker Swarm on leader
      community.docker.docker_swarm:
        state: present
        advertise_addr: "{{ private_ip }}"

    - name: Retrieve Swarm worker join token
      ansible.builtin.command: docker swarm join-token -q worker
      register: swarm_worker_token
      changed_when: false

    - name: Share the token with all worker nodes
      ansible.builtin.set_fact:
        swarm_worker_token: "{{ swarm_worker_token.stdout }}"
      run_once: true


- name: Setup Docker Swarm Workers
  hosts: swarm_workers
  tasks:
    - name: Install Python Docker module
      ansible.builtin.pip:
        name: docker

    - name: Fetch IP of the droplet
      ansible.builtin.uri:
        url: http://169.254.169.254/metadata/v1/interfaces/private/0/ipv4/address
        return_content: yes
      register: metadata_response

    - name: Set IP as a fact
      ansible.builtin.set_fact:
        private_ip: "{{ metadata_response.content | trim }}"

    - name: Join worker nodes to Swarm
      community.docker.docker_swarm:
        state: join
        advertise_addr: "{{ private_ip }}"
        join_token: "{{ hostvars['leader']['swarm_worker_token'] }}"
        remote_addrs: ["{{ hostvars['leader']['private_ip'] }}:2377"]
      - name: Join worker nodes to Swarm